{
  "address": "0x6884cf91CcEA60028C91f5fb16f871C09FfA45b8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe93af932bbed1ff4cc6cb22571dc5adc8cba209ba465a857a947d03b7cfe2ed4",
  "receipt": {
    "to": null,
    "from": "0x76974FF5D0f85529841cb3b9DCa144ef15b46708",
    "contractAddress": "0x6884cf91CcEA60028C91f5fb16f871C09FfA45b8",
    "transactionIndex": 11,
    "gasUsed": "874977",
    "logsBloom": "0x
    "blockHash": "0xce97652985eaedf20cbe970c343b4ff78e4952af252db08df90efe8067fd1089",
    "transactionHash": "0xe93af932bbed1ff4cc6cb22571dc5adc8cba209ba465a857a947d03b7cfe2ed4",
    "logs": [],
    "blockNumber": 10971866,
    "cumulativeGasUsed": "7470458",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "93e05cb0216a2e31e6d8f568f5ad54a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n//constant, immutable\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    // to make a function payable/withdrawable we need to make the function as 'payable'\\n\\n    // type declarations\\n    using PriceConverter for uint256;\\n\\n    //state variables!!\\n    uint256 public minimumUsd = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // want to be able to set a minnimum fund amount\\n        // 1. how do we send ETH to this contract?\\n\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"Don't have enough ETH!\\\"\\n        ); // 1e18 == 1 * 10 ** 18 == 1000000000000000000\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            // code\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array\\n        funders = new address[](0);\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"You are not the owner\\\");\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xf81295f34ed568ee5755f1a9fd473020c4b92ccdb6385804e431c4bf6b73470e\",\"license\":\"Unlicense\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n \\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256) {\\r\\n        // ABI: \\r\\n        // Address: 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e (address for ETH/USD on the rinkeby network)\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n        //ETH in term of USD\\r\\n        return uint256(price * 1e10); // trying to make it match the amount in wei and since it's in 8 decimal places we just mulitiply it by 10\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        //\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x057841b01870b84a747bcb26daad74c0a2ecf59be36e11fca151cc061ae51ec6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f7d380380610f7d833981810160405281019061003f9190610120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ed826100c2565b9050919050565b6100fd816100e2565b811461010857600080fd5b50565b60008151905061011a816100f4565b92915050565b600060208284031215610136576101356100bd565b5b60006101448482850161010b565b91505092915050565b60805160601c610e0b610172600039600081816102d301526105520152610e0b6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b6040516100af919061074f565b60405180910390f35b3480156100c457600080fd5b506100cd6102d1565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107cd565b610512565b604051610103919061074f565b60405180910390f35b34801561011857600080fd5b5061012161052a565b60405161012e9190610859565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610550565b6040516101639190610883565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ca565b610574565b6040516101a09190610883565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b390919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610954565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104025760006001828154811061037c5761037b610974565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109d2565b915050610359565b50600067ffffffffffffffff81111561041e5761041d610a1b565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506001908051906020019061046292919061068f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a7b565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610adc565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bf836105ef565b90506000670de0b6b3a764000085836105d89190610afc565b6105e29190610b85565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063857600080fd5b505afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106709190610c43565b5050509150506402540be400816106879190610cbe565b915050919050565b828054828255906000526020600020908101928215610708579160200282015b828111156107075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106af565b5b5090506107159190610719565b5090565b5b8082111561073257600081600090555060010161071a565b5090565b6000819050919050565b61074981610736565b82525050565b60006020820190506107646000830184610740565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079a8261076f565b9050919050565b6107aa8161078f565b81146107b557600080fd5b50565b6000813590506107c7816107a1565b92915050565b6000602082840312156107e3576107e261076a565b5b60006107f1848285016107b8565b91505092915050565b6000819050919050565b600061081f61081a6108158461076f565b6107fa565b61076f565b9050919050565b600061083182610804565b9050919050565b600061084382610826565b9050919050565b61085381610838565b82525050565b600060208201905061086e600083018461084a565b92915050565b61087d8161078f565b82525050565b60006020820190506108986000830184610874565b92915050565b6108a781610736565b81146108b257600080fd5b50565b6000813590506108c48161089e565b92915050565b6000602082840312156108e0576108df61076a565b5b60006108ee848285016108b5565b91505092915050565b600082825260208201905092915050565b7f446f6e2774206861766520656e6f756768204554482100000000000000000000600082015250565b600061093e6016836108f7565b915061094982610908565b602082019050919050565b6000602082019050818103600083015261096d81610931565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109dd82610736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1057610a0f6109a3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a65600083610a4a565b9150610a7082610a55565b600082019050919050565b6000610a8682610a58565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac6600b836108f7565b9150610ad182610a90565b602082019050919050565b60006020820190508181036000830152610af581610ab9565b9050919050565b6000610b0782610736565b9150610b1283610736565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4b57610b4a6109a3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9082610736565b9150610b9b83610736565b925082610bab57610baa610b56565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd581610bb6565b8114610be057600080fd5b50565b600081519050610bf281610bcc565b92915050565b6000819050919050565b610c0b81610bf8565b8114610c1657600080fd5b50565b600081519050610c2881610c02565b92915050565b600081519050610c3d8161089e565b92915050565b600080600080600060a08688031215610c5f57610c5e61076a565b5b6000610c6d88828901610be3565b9550506020610c7e88828901610c19565b9450506040610c8f88828901610c2e565b9350506060610ca088828901610c2e565b9250506080610cb188828901610be3565b9150509295509295909350565b6000610cc982610bf8565b9150610cd483610bf8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1357610d126109a3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5057610d4f6109a3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8d57610d8c6109a3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dca57610dc96109a3565b5b82820290509291505056fea2646970667358221220745060830b180dc40cc8d6454721dc439668def37ba917d3c9ad8efa031e1b9d64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b6040516100af919061074f565b60405180910390f35b3480156100c457600080fd5b506100cd6102d1565b005b3480156100db57600080fd5b506100f660048036038101906100f191906107cd565b610512565b604051610103919061074f565b60405180910390f35b34801561011857600080fd5b5061012161052a565b60405161012e9190610859565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610550565b6040516101639190610883565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108ca565b610574565b6040516101a09190610883565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b390919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610954565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610356576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104025760006001828154811061037c5761037b610974565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fa906109d2565b915050610359565b50600067ffffffffffffffff81111561041e5761041d610a1b565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b506001908051906020019061046292919061068f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610a7b565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610adc565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061058457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bf836105ef565b90506000670de0b6b3a764000085836105d89190610afc565b6105e29190610b85565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063857600080fd5b505afa15801561064c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106709190610c43565b5050509150506402540be400816106879190610cbe565b915050919050565b828054828255906000526020600020908101928215610708579160200282015b828111156107075782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106af565b5b5090506107159190610719565b5090565b5b8082111561073257600081600090555060010161071a565b5090565b6000819050919050565b61074981610736565b82525050565b60006020820190506107646000830184610740565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061079a8261076f565b9050919050565b6107aa8161078f565b81146107b557600080fd5b50565b6000813590506107c7816107a1565b92915050565b6000602082840312156107e3576107e261076a565b5b60006107f1848285016107b8565b91505092915050565b6000819050919050565b600061081f61081a6108158461076f565b6107fa565b61076f565b9050919050565b600061083182610804565b9050919050565b600061084382610826565b9050919050565b61085381610838565b82525050565b600060208201905061086e600083018461084a565b92915050565b61087d8161078f565b82525050565b60006020820190506108986000830184610874565b92915050565b6108a781610736565b81146108b257600080fd5b50565b6000813590506108c48161089e565b92915050565b6000602082840312156108e0576108df61076a565b5b60006108ee848285016108b5565b91505092915050565b600082825260208201905092915050565b7f446f6e2774206861766520656e6f756768204554482100000000000000000000600082015250565b600061093e6016836108f7565b915061094982610908565b602082019050919050565b6000602082019050818103600083015261096d81610931565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109dd82610736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1057610a0f6109a3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a65600083610a4a565b9150610a7082610a55565b600082019050919050565b6000610a8682610a58565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ac6600b836108f7565b9150610ad182610a90565b602082019050919050565b60006020820190508181036000830152610af581610ab9565b9050919050565b6000610b0782610736565b9150610b1283610736565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4b57610b4a6109a3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9082610736565b9150610b9b83610736565b925082610bab57610baa610b56565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd581610bb6565b8114610be057600080fd5b50565b600081519050610bf281610bcc565b92915050565b6000819050919050565b610c0b81610bf8565b8114610c1657600080fd5b50565b600081519050610c2881610c02565b92915050565b600081519050610c3d8161089e565b92915050565b600080600080600060a08688031215610c5f57610c5e61076a565b5b6000610c6d88828901610be3565b9550506020610c7e88828901610c19565b9450506040610c8f88828901610c2e565b9350506060610ca088828901610c2e565b9250506080610cb188828901610be3565b9150509295509295909350565b6000610cc982610bf8565b9150610cd483610bf8565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d1357610d126109a3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5057610d4f6109a3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8d57610d8c6109a3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dca57610dc96109a3565b5b82820290509291505056fea2646970667358221220745060830b180dc40cc8d6454721dc439668def37ba917d3c9ad8efa031e1b9d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}